points(seq(1, 36, 1), sgolay(n = 51, p = 3)[26,16:51], col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 36, 1), sgolay(n = 51, p = 3)[36,16:51], col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 36, 1), sgolay(n = 51, p = 3)[1,16:51], col = 'red')
points(seq(1, 36, 1), sgolay(n = 51, p = 3)[10,16:51], col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 36, 1), sgolay(n = 51, p = 3)[10,16:51], col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 36, 1), sgolay(n = 51, p = 3)[15,16:51], col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 36, 1), sgolay(n = 51, p = 3)[20,16:51], col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 36, 1), sgolay(n = 51, p = 3)[25,16:51], col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 36, 1), sgolay(n = 51, p = 3)[23,16:51], col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 36, 1), sgolay(n = 51, p = 3)[24,16:51], col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 36, 1), sgolay(n = 51, p = 3)[22,16:51], col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 44, 1), sgolay(n = 51, p = 3)[22,9:51], col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 42, 1), sgolay(n = 51, p = 3)[22,9:51], col = 'red')
length(seq(1, 42, 1))
length(sgolay(n = 51, p = 3)[22,9:51])
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 42, 1), sgolay(n = 51, p = 3)[22,10:51], col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 42, 1), sgolay(n = 51, p = 3)[26,10:51], col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 42, 1), sgolay(n = 51, p = 3)[22,10:51], col = 'red')
s = sgolayfit(epi1$I_true, n = 51, p = 3)
s = sgolayfilt(epi1$I_true, n = 51, p = 3)
s
epi1$I_true %*% sgolay(n = 51, p = 3)
epi1$I_true[100:151] %*% sgolay(n = 51, p = 3)
t(epi1$I_true[100:151]) %*% sgolay(n = 51, p = 3)
t(epi1$I_true[100:152]) %*% sgolay(n = 51, p = 3)
length(epi1$I_true[100:152])
dim(sgolay(n = 51, p = 3))
t(epi1$I_true[100:150]) %*% sgolay(n = 51, p = 3)
s
s[125]
t(epi1$I_true[100:150]) %*% sgolay(n = 51, p = 3)
sgolayfilt(epi1$I_true, n = 51, p = 3, filt = sgolay(n = 51, p = 3))
sgolayfilt(epi1$I_true, filt = sgolay(n = 51, p = 3))
sgolayfilt(x = pi1$I_true, filt = sgolay(n = 51, p = 3))
epi1$lam_true - s
diff(epi1$lam_true) - diff(s)
epi1$lam_true[9:280] - s[1:272]
epi1$lam_true[16:280] - s[1:265]
diff(epi1$lam_true[16:280]) - diff(s[1:265])
plot(epi1$lam_true[16:280])
point(s[1:265])
points(s[1:265])
plot(diff(epi1$lam_true[16:280]))
points(diff(s[1:265]))
plot(diff(epi1$lam_true[16:280]))
points(diff(s[1:265]), col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 42, 1), sgolay(n = 51, p = 3)[22,10:51], col = 'red')
points(seq(1, 42, 1), sgolay(n = 51, p = 3)[26,10:51], col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 42, 1), sgolay(n = 51, p = 3)[26,10:51], col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 42, 1), rev(sgolay(n = 51, p = 3)[26,10:51]), col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 42, 1), rev(sgolay(n = 51, p = 3)[26,1:40]), col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 42, 1), rev(sgolay(n = 51, p = 3)[26,1:41]), col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 42, 1), rev(sgolay(n = 51, p = 3)[26,1:39]), col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 40, 1), rev(sgolay(n = 51, p = 3)[26,1:40]), col = 'red')
points(seq(1, 40, 1), sgolay(n = 51, p = 3)[26,1:40], col = 'red')
plot(seq(1, 51, 1), a/sum(a), ylim = c(-0.05, 0.1))
points(seq(1, 40, 1), rev(sgolay(n = 51, p = 3)[26,1:40]), col = 'red')
kl <- function(R_true, R_est, lambda_true){
return(lambda_true * (R_true * log(R_true / R_est) + R_est - R_true))
}
simulate_epidemic <- function(n_days, dist_param, init_inc, offset, scen_num, save_plot, file_name){
##Derive true values and model estimates
epi_vals <- setup(scen_num, n_days, dist_param, init_inc, offset) #get true values
r_lam <- diff(log(epi_vals$lam_true)) #r_t | lam_t as pairwise difference of log(lam_t)
tau <- round(dist_param[1] / dist_param[2] / 2)
#get the true r_t from true R_t based on same model assumptions
r_true <- get_rt(epi_vals$R_true, dist_param)
plot(seq(1, 280, 1), epi_vals$R_true)
plot(seq(1, 280, 1), epi_vals$I_true)
#esimate Rt using rtestim package
R_est <- run_rtestim(epi_vals$I_true, dist_param)
#smoothed incidence using SG filter (window 50, cubic fit)
I_emp <- pmax(sgolayfilt(epi_vals$I_true, p = 3, n = 31), rep(0.00001, n_days - offset))
r_emp <- sgolayfilt(diff(log(I_emp)), p = 3, n = 91) #r_t | S_t from smoothed incidence
r_Rt <- get_rt(R_est$fit, dist_param)
r_upperCI <- get_rt(R_est$ci$`97.5%`, dist_param)
r_lowerCI <- get_rt(R_est$ci$`2.5%`, dist_param)
##Plot 1: estimating reproduction numbers
g1 <- ggplot(data.frame(x = seq(offset + 1, n_days, 1), y = epi_vals$R_true, z = R_est$fit)) +
geom_line(aes(x = x, y = y, colour = 'R_true')) +
geom_line(aes(x = x, y = z, colour = 'R_estimate')) +
geom_line(aes(x = x, y = R_est$ci$`2.5%`, colour = 'R_estimate'), linetype = 'dotted') +
geom_line(aes(x = x, y = R_est$ci$`97.5%`, colour = 'R_estimate'), linetype = 'dotted') +
scale_color_manual(values = c('R_true' = 'black', 'R_estimate' = 'blue')) +
labs(title = 'Estimating Instantaneous Reproduction Number', x = 'Days', y = 'Reproduction Number',
color = 'Reproduction Number', tag = 'a)')
##Plot 2: estimating growth rates 3 ways
g2 <- ggplot() +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_true, colour = 'r_true')) +
geom_line(aes(x = seq(offset + tau + 1, n_days, 1), y = r_emp[1:(length(r_emp) - tau + 1)], colour = 'r_t | S_t')) +
geom_line(aes(x = seq(offset + 1, n_days - tau, 1), y = r_lam[tau:length(r_lam)], colour = 'r_t | lam_t')) +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_Rt, colour = 'r_t | R_t')) +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_upperCI, colour = 'r_t | R_t'), linetype = 'dotted') +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_lowerCI, colour = 'r_t | R_t'), linetype = 'dotted') +
scale_color_manual(values = c('r_true' = 'black', 'r_t | S_t' = 'blue', 'r_t | lam_t' = 'red', 'r_t | R_t' = 'green')) +
labs(title = 'Estimating Instantaneous Growth Rate',x = 'Days', y = 'Growth Rate',
color = 'Growth Rate', tag = 'b)')
##Plot 3: incidence
#Here, we use I_t coming from a Poisson distribution with rate (R_t lam_t)
g3 <- ggplot(data.frame(x = seq(offset + 1, n_days, 1), y = epi_vals$I_true, z = epi_vals$lam_true * R_est$fit)) +
geom_point(aes(x = x, y = y, colour = 'I_true'), size = 0.2) +
geom_line(aes(x = x, y = z, colour = 'I_t | R_t')) +
scale_color_manual(values = c('I_true' = 'black', 'I_t | R_t' = 'blue')) +
labs(x = 'Days', y = 'Incidence of Infection', title = 'Estimating Incidence of Infection',
color = 'Incidence', tag = 'c)')
##Plot 4: smoothed incidence curves
g4 <- ggplot(data.frame(x = seq(offset + 1, n_days - 2 * tau, 1), y = epi_vals$I_true[1:(n_days - offset - 2 * tau)],
z = I_emp[1:(n_days - offset - 2 * tau)], w = epi_vals$lam_true[(2 * tau + 1):(n_days - offset)])) +
geom_point(aes(x = x, y = y, colour = 'I_t'), size = 0.2) +
geom_line(aes(x = x, y = z, colour = 'S_t')) +
geom_line(aes(x = x, y = w, colour = 'lam_{t + 2tau}')) +
scale_color_manual(values = c('I_t' = 'black', 'S_t' = 'blue', 'lam_{t + 2tau}' = 'red')) +
labs(x = 'Days', y = 'Incidence of Infection', title = 'Smoothing Incidence of Infection',
color = 'Incidence', tag = 'd)')
print(g1)
print(g2)
print(g3)
print(g4)
if(save_plot){
to_plot <- grid.arrange(g1, g2, g3, g4, ncol = 2, nrow = 2)#, labels = c("a)","b)","c)", "d)"))
ggsave(file_name, to_plot)
#pdf(file_name)
#print(to_plot)
#dev.off()
}
return(list('R_true' = epi_vals$R_true, 'I_true' = epi_vals$I_true,
'lam_true' = epi_vals$lam_true,'r_true' = r_true, 'R_true' = R_est$fit))
}
epi1 <- simulate_epidemic(n_days, dist_param, init_inc, offset, scen_num, 0, 'epi_paper.pdf')
epi1 <- simulate_epidemic(n_days, dist_param, init_inc, offset, scen_num, 0, 'epi_paper.pdf')
epi1$R_est
simulate_epidemic <- function(n_days, dist_param, init_inc, offset, scen_num, save_plot, file_name){
##Derive true values and model estimates
epi_vals <- setup(scen_num, n_days, dist_param, init_inc, offset) #get true values
r_lam <- diff(log(epi_vals$lam_true)) #r_t | lam_t as pairwise difference of log(lam_t)
tau <- round(dist_param[1] / dist_param[2] / 2)
#get the true r_t from true R_t based on same model assumptions
r_true <- get_rt(epi_vals$R_true, dist_param)
plot(seq(1, 280, 1), epi_vals$R_true)
plot(seq(1, 280, 1), epi_vals$I_true)
#esimate Rt using rtestim package
R_est <- run_rtestim(epi_vals$I_true, dist_param)
#smoothed incidence using SG filter (window 50, cubic fit)
I_emp <- pmax(sgolayfilt(epi_vals$I_true, p = 3, n = 31), rep(0.00001, n_days - offset))
r_emp <- sgolayfilt(diff(log(I_emp)), p = 3, n = 91) #r_t | S_t from smoothed incidence
r_Rt <- get_rt(R_est$fit, dist_param)
r_upperCI <- get_rt(R_est$ci$`97.5%`, dist_param)
r_lowerCI <- get_rt(R_est$ci$`2.5%`, dist_param)
##Plot 1: estimating reproduction numbers
g1 <- ggplot(data.frame(x = seq(offset + 1, n_days, 1), y = epi_vals$R_true, z = R_est$fit)) +
geom_line(aes(x = x, y = y, colour = 'R_true')) +
geom_line(aes(x = x, y = z, colour = 'R_estimate')) +
geom_line(aes(x = x, y = R_est$ci$`2.5%`, colour = 'R_estimate'), linetype = 'dotted') +
geom_line(aes(x = x, y = R_est$ci$`97.5%`, colour = 'R_estimate'), linetype = 'dotted') +
scale_color_manual(values = c('R_true' = 'black', 'R_estimate' = 'blue')) +
labs(title = 'Estimating Instantaneous Reproduction Number', x = 'Days', y = 'Reproduction Number',
color = 'Reproduction Number', tag = 'a)')
##Plot 2: estimating growth rates 3 ways
g2 <- ggplot() +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_true, colour = 'r_true')) +
geom_line(aes(x = seq(offset + tau + 1, n_days, 1), y = r_emp[1:(length(r_emp) - tau + 1)], colour = 'r_t | S_t')) +
geom_line(aes(x = seq(offset + 1, n_days - tau, 1), y = r_lam[tau:length(r_lam)], colour = 'r_t | lam_t')) +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_Rt, colour = 'r_t | R_t')) +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_upperCI, colour = 'r_t | R_t'), linetype = 'dotted') +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_lowerCI, colour = 'r_t | R_t'), linetype = 'dotted') +
scale_color_manual(values = c('r_true' = 'black', 'r_t | S_t' = 'blue', 'r_t | lam_t' = 'red', 'r_t | R_t' = 'green')) +
labs(title = 'Estimating Instantaneous Growth Rate',x = 'Days', y = 'Growth Rate',
color = 'Growth Rate', tag = 'b)')
##Plot 3: incidence
#Here, we use I_t coming from a Poisson distribution with rate (R_t lam_t)
g3 <- ggplot(data.frame(x = seq(offset + 1, n_days, 1), y = epi_vals$I_true, z = epi_vals$lam_true * R_est$fit)) +
geom_point(aes(x = x, y = y, colour = 'I_true'), size = 0.2) +
geom_line(aes(x = x, y = z, colour = 'I_t | R_t')) +
scale_color_manual(values = c('I_true' = 'black', 'I_t | R_t' = 'blue')) +
labs(x = 'Days', y = 'Incidence of Infection', title = 'Estimating Incidence of Infection',
color = 'Incidence', tag = 'c)')
##Plot 4: smoothed incidence curves
g4 <- ggplot(data.frame(x = seq(offset + 1, n_days - 2 * tau, 1), y = epi_vals$I_true[1:(n_days - offset - 2 * tau)],
z = I_emp[1:(n_days - offset - 2 * tau)], w = epi_vals$lam_true[(2 * tau + 1):(n_days - offset)])) +
geom_point(aes(x = x, y = y, colour = 'I_t'), size = 0.2) +
geom_line(aes(x = x, y = z, colour = 'S_t')) +
geom_line(aes(x = x, y = w, colour = 'lam_{t + 2tau}')) +
scale_color_manual(values = c('I_t' = 'black', 'S_t' = 'blue', 'lam_{t + 2tau}' = 'red')) +
labs(x = 'Days', y = 'Incidence of Infection', title = 'Smoothing Incidence of Infection',
color = 'Incidence', tag = 'd)')
print(g1)
print(g2)
print(g3)
print(g4)
if(save_plot){
to_plot <- grid.arrange(g1, g2, g3, g4, ncol = 2, nrow = 2)#, labels = c("a)","b)","c)", "d)"))
ggsave(file_name, to_plot)
#pdf(file_name)
#print(to_plot)
#dev.off()
}
return(list('R_true' = epi_vals$R_true, 'I_true' = epi_vals$I_true,
'lam_true' = epi_vals$lam_true,'r_true' = r_true, 'R_true' = R_est$fit))
}
epi1 <- simulate_epidemic(n_days, dist_param, init_inc, offset, scen_num, 0, 'epi_paper.pdf')
epi1$R_est
epi1
simulate_epidemic <- function(n_days, dist_param, init_inc, offset, scen_num, save_plot, file_name){
##Derive true values and model estimates
epi_vals <- setup(scen_num, n_days, dist_param, init_inc, offset) #get true values
r_lam <- diff(log(epi_vals$lam_true)) #r_t | lam_t as pairwise difference of log(lam_t)
tau <- round(dist_param[1] / dist_param[2] / 2)
#get the true r_t from true R_t based on same model assumptions
r_true <- get_rt(epi_vals$R_true, dist_param)
plot(seq(1, 280, 1), epi_vals$R_true)
plot(seq(1, 280, 1), epi_vals$I_true)
#esimate Rt using rtestim package
R_est <- run_rtestim(epi_vals$I_true, dist_param)
#smoothed incidence using SG filter (window 50, cubic fit)
I_emp <- pmax(sgolayfilt(epi_vals$I_true, p = 3, n = 31), rep(0.00001, n_days - offset))
r_emp <- sgolayfilt(diff(log(I_emp)), p = 3, n = 91) #r_t | S_t from smoothed incidence
r_Rt <- get_rt(R_est$fit, dist_param)
r_upperCI <- get_rt(R_est$ci$`97.5%`, dist_param)
r_lowerCI <- get_rt(R_est$ci$`2.5%`, dist_param)
##Plot 1: estimating reproduction numbers
g1 <- ggplot(data.frame(x = seq(offset + 1, n_days, 1), y = epi_vals$R_true, z = R_est$fit)) +
geom_line(aes(x = x, y = y, colour = 'R_true')) +
geom_line(aes(x = x, y = z, colour = 'R_estimate')) +
geom_line(aes(x = x, y = R_est$ci$`2.5%`, colour = 'R_estimate'), linetype = 'dotted') +
geom_line(aes(x = x, y = R_est$ci$`97.5%`, colour = 'R_estimate'), linetype = 'dotted') +
scale_color_manual(values = c('R_true' = 'black', 'R_estimate' = 'blue')) +
labs(title = 'Estimating Instantaneous Reproduction Number', x = 'Days', y = 'Reproduction Number',
color = 'Reproduction Number', tag = 'a)')
##Plot 2: estimating growth rates 3 ways
g2 <- ggplot() +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_true, colour = 'r_true')) +
geom_line(aes(x = seq(offset + tau + 1, n_days, 1), y = r_emp[1:(length(r_emp) - tau + 1)], colour = 'r_t | S_t')) +
geom_line(aes(x = seq(offset + 1, n_days - tau, 1), y = r_lam[tau:length(r_lam)], colour = 'r_t | lam_t')) +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_Rt, colour = 'r_t | R_t')) +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_upperCI, colour = 'r_t | R_t'), linetype = 'dotted') +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_lowerCI, colour = 'r_t | R_t'), linetype = 'dotted') +
scale_color_manual(values = c('r_true' = 'black', 'r_t | S_t' = 'blue', 'r_t | lam_t' = 'red', 'r_t | R_t' = 'green')) +
labs(title = 'Estimating Instantaneous Growth Rate',x = 'Days', y = 'Growth Rate',
color = 'Growth Rate', tag = 'b)')
##Plot 3: incidence
#Here, we use I_t coming from a Poisson distribution with rate (R_t lam_t)
g3 <- ggplot(data.frame(x = seq(offset + 1, n_days, 1), y = epi_vals$I_true, z = epi_vals$lam_true * R_est$fit)) +
geom_point(aes(x = x, y = y, colour = 'I_true'), size = 0.2) +
geom_line(aes(x = x, y = z, colour = 'I_t | R_t')) +
scale_color_manual(values = c('I_true' = 'black', 'I_t | R_t' = 'blue')) +
labs(x = 'Days', y = 'Incidence of Infection', title = 'Estimating Incidence of Infection',
color = 'Incidence', tag = 'c)')
##Plot 4: smoothed incidence curves
g4 <- ggplot(data.frame(x = seq(offset + 1, n_days - 2 * tau, 1), y = epi_vals$I_true[1:(n_days - offset - 2 * tau)],
z = I_emp[1:(n_days - offset - 2 * tau)], w = epi_vals$lam_true[(2 * tau + 1):(n_days - offset)])) +
geom_point(aes(x = x, y = y, colour = 'I_t'), size = 0.2) +
geom_line(aes(x = x, y = z, colour = 'S_t')) +
geom_line(aes(x = x, y = w, colour = 'lam_{t + 2tau}')) +
scale_color_manual(values = c('I_t' = 'black', 'S_t' = 'blue', 'lam_{t + 2tau}' = 'red')) +
labs(x = 'Days', y = 'Incidence of Infection', title = 'Smoothing Incidence of Infection',
color = 'Incidence', tag = 'd)')
print(g1)
print(g2)
print(g3)
print(g4)
if(save_plot){
to_plot <- grid.arrange(g1, g2, g3, g4, ncol = 2, nrow = 2)#, labels = c("a)","b)","c)", "d)"))
ggsave(file_name, to_plot)
#pdf(file_name)
#print(to_plot)
#dev.off()
}
return(list('R_true' = epi_vals$R_true, 'I_true' = epi_vals$I_true,
'lam_true' = epi_vals$lam_true,'r_true' = r_true, 'R_est' = R_est$fit))
}
epi1 <- simulate_epidemic(n_days, dist_param, init_inc, offset, scen_num, 0, 'epi_paper.pdf')
kl(epi1$R_true, epi1$R_est, epi1$lam_true)
kl <- function(R_true, R_est, lambda_true){
return(sum(lambda_true * (R_true * log(R_true / R_est) + R_est - R_true)))
}
kl(epi1$R_true, epi1$R_est, epi1$lam_true)
simulate_epidemic <- function(n_days, dist_param, init_inc, offset, scen_num, save_plot, file_name){
##Derive true values and model estimates
epi_vals <- setup(scen_num, n_days, dist_param, init_inc, offset) #get true values
r_lam <- diff(log(epi_vals$lam_true)) #r_t | lam_t as pairwise difference of log(lam_t)
tau <- round(dist_param[1] / dist_param[2] / 2)
#get the true r_t from true R_t based on same model assumptions
r_true <- get_rt(epi_vals$R_true, dist_param)
plot(seq(1, 280, 1), epi_vals$R_true)
plot(seq(1, 280, 1), epi_vals$I_true)
#esimate Rt using rtestim package
R_est <- run_rtestim(epi_vals$I_true, dist_param)
#smoothed incidence using SG filter (window 50, cubic fit)
I_emp <- pmax(sgolayfilt(epi_vals$I_true, p = 3, n = 31), rep(0.00001, n_days - offset))
r_emp <- sgolayfilt(diff(log(I_emp)), p = 3, n = 91) #r_t | S_t from smoothed incidence
r_Rt <- get_rt(R_est$fit, dist_param)
r_upperCI <- get_rt(R_est$ci$`97.5%`, dist_param)
r_lowerCI <- get_rt(R_est$ci$`2.5%`, dist_param)
##Plot 1: estimating reproduction numbers
g1 <- ggplot(data.frame(x = seq(offset + 1, n_days, 1), y = epi_vals$R_true, z = R_est$fit)) +
geom_line(aes(x = x, y = y, colour = 'R_true')) +
geom_line(aes(x = x, y = z, colour = 'R_estimate')) +
geom_line(aes(x = x, y = R_est$ci$`2.5%`, colour = 'R_estimate'), linetype = 'dotted') +
geom_line(aes(x = x, y = R_est$ci$`97.5%`, colour = 'R_estimate'), linetype = 'dotted') +
scale_color_manual(values = c('R_true' = 'black', 'R_estimate' = 'blue')) +
labs(title = 'Estimating Instantaneous Reproduction Number', x = 'Days', y = 'Reproduction Number',
color = 'Reproduction Number', tag = 'a)')
##Plot 2: estimating growth rates 3 ways
g2 <- ggplot() +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_true, colour = 'r_true')) +
geom_line(aes(x = seq(offset + tau + 1, n_days, 1), y = r_emp[1:(length(r_emp) - tau + 1)], colour = 'r_t | S_t')) +
geom_line(aes(x = seq(offset + 1, n_days - tau, 1), y = r_lam[tau:length(r_lam)], colour = 'r_t | lam_t')) +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_Rt, colour = 'r_t | R_t')) +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_upperCI, colour = 'r_t | R_t'), linetype = 'dotted') +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_lowerCI, colour = 'r_t | R_t'), linetype = 'dotted') +
scale_color_manual(values = c('r_true' = 'black', 'r_t | S_t' = 'blue', 'r_t | lam_t' = 'red', 'r_t | R_t' = 'green')) +
labs(title = 'Estimating Instantaneous Growth Rate',x = 'Days', y = 'Growth Rate',
color = 'Growth Rate', tag = 'b)')
##Plot 3: incidence
#Here, we use I_t coming from a Poisson distribution with rate (R_t lam_t)
g3 <- ggplot(data.frame(x = seq(offset + 1, n_days, 1), y = epi_vals$I_true, z = epi_vals$lam_true * R_est$fit)) +
geom_point(aes(x = x, y = y, colour = 'I_true'), size = 0.2) +
geom_line(aes(x = x, y = z, colour = 'I_t | R_t')) +
scale_color_manual(values = c('I_true' = 'black', 'I_t | R_t' = 'blue')) +
labs(x = 'Days', y = 'Incidence of Infection', title = 'Estimating Incidence of Infection',
color = 'Incidence', tag = 'c)')
##Plot 4: smoothed incidence curves
g4 <- ggplot(data.frame(x = seq(offset + 1, n_days - 2 * tau, 1), y = epi_vals$I_true[1:(n_days - offset - 2 * tau)],
z = I_emp[1:(n_days - offset - 2 * tau)], w = epi_vals$lam_true[(2 * tau + 1):(n_days - offset)])) +
geom_point(aes(x = x, y = y, colour = 'I_t'), size = 0.2) +
geom_line(aes(x = x, y = z, colour = 'S_t')) +
geom_line(aes(x = x, y = w, colour = 'lam_{t + 2tau}')) +
scale_color_manual(values = c('I_t' = 'black', 'S_t' = 'blue', 'lam_{t + 2tau}' = 'red')) +
labs(x = 'Days', y = 'Incidence of Infection', title = 'Smoothing Incidence of Infection',
color = 'Incidence', tag = 'd)')
print(g1)
print(g2)
print(g3)
print(g4)
if(save_plot){
to_plot <- grid.arrange(g1, g2, g3, g4, ncol = 2, nrow = 2)#, labels = c("a)","b)","c)", "d)"))
ggsave(file_name, to_plot)
#pdf(file_name)
#print(to_plot)
#dev.off()
}
return(list('R_true' = epi_vals$R_true, 'I_true' = epi_vals$I_true, 'r_est' = r_Rt,
'lam_true' = epi_vals$lam_true,'r_true' = r_true, 'R_est' = R_est$fit))
}
epi1 <- simulate_epidemic(n_days, dist_param, init_inc, offset, scen_num, 0, 'epi_paper.pdf')
kl(epi1$R_true, epi1$R_est, epi1$lam_true)
mse <- function(r_true, r_est){
return(sum((r_true - r_est)^2))
}
mse(epi1$r_true, epi1$r_est)
epi1$r_true - epi1$r_est
simulate_epidemic <- function(n_days, dist_param, init_inc, offset, scen_num, save_plot, file_name){
##Derive true values and model estimates
epi_vals <- setup(scen_num, n_days, dist_param, init_inc, offset) #get true values
r_lam <- diff(log(epi_vals$lam_true)) #r_t | lam_t as pairwise difference of log(lam_t)
tau <- round(dist_param[1] / dist_param[2] / 2)
#get the true r_t from true R_t based on same model assumptions
r_true <- get_rt(epi_vals$R_true, dist_param)
plot(seq(1, 280, 1), epi_vals$R_true)
plot(seq(1, 280, 1), epi_vals$I_true)
#esimate Rt using rtestim package
R_est <- run_rtestim(epi_vals$I_true, dist_param)
#smoothed incidence using SG filter (window 50, cubic fit)
I_emp <- pmax(sgolayfilt(epi_vals$I_true, p = 3, n = 31), rep(0.00001, n_days - offset))
r_emp <- sgolayfilt(diff(log(I_emp)), p = 3, n = 91) #r_t | S_t from smoothed incidence
r_Rt <- get_rt(R_est$fit, dist_param)
r_upperCI <- get_rt(R_est$ci$`97.5%`, dist_param)
r_lowerCI <- get_rt(R_est$ci$`2.5%`, dist_param)
##Plot 1: estimating reproduction numbers
g1 <- ggplot(data.frame(x = seq(offset + 1, n_days, 1), y = epi_vals$R_true, z = R_est$fit)) +
geom_line(aes(x = x, y = y, colour = 'R_true')) +
geom_line(aes(x = x, y = z, colour = 'R_estimate')) +
geom_line(aes(x = x, y = R_est$ci$`2.5%`, colour = 'R_estimate'), linetype = 'dotted') +
geom_line(aes(x = x, y = R_est$ci$`97.5%`, colour = 'R_estimate'), linetype = 'dotted') +
scale_color_manual(values = c('R_true' = 'black', 'R_estimate' = 'blue')) +
labs(title = 'Estimating Instantaneous Reproduction Number', x = 'Days', y = 'Reproduction Number',
color = 'Reproduction Number', tag = 'a)')
##Plot 2: estimating growth rates 3 ways
g2 <- ggplot() +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_true, colour = 'r_true')) +
geom_line(aes(x = seq(offset + tau + 1, n_days, 1), y = r_emp[1:(length(r_emp) - tau + 1)], colour = 'r_t | S_t')) +
geom_line(aes(x = seq(offset + 1, n_days - tau, 1), y = r_lam[tau:length(r_lam)], colour = 'r_t | lam_t')) +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_Rt, colour = 'r_t | R_t')) +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_upperCI, colour = 'r_t | R_t'), linetype = 'dotted') +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_lowerCI, colour = 'r_t | R_t'), linetype = 'dotted') +
scale_color_manual(values = c('r_true' = 'black', 'r_t | S_t' = 'blue', 'r_t | lam_t' = 'red', 'r_t | R_t' = 'green')) +
labs(title = 'Estimating Instantaneous Growth Rate',x = 'Days', y = 'Growth Rate',
color = 'Growth Rate', tag = 'b)')
##Plot 3: incidence
#Here, we use I_t coming from a Poisson distribution with rate (R_t lam_t)
g3 <- ggplot(data.frame(x = seq(offset + 1, n_days, 1), y = epi_vals$I_true, z = epi_vals$lam_true * R_est$fit)) +
geom_point(aes(x = x, y = y, colour = 'I_true'), size = 0.2) +
geom_line(aes(x = x, y = z, colour = 'I_t | R_t')) +
scale_color_manual(values = c('I_true' = 'black', 'I_t | R_t' = 'blue')) +
labs(x = 'Days', y = 'Incidence of Infection', title = 'Estimating Incidence of Infection',
color = 'Incidence', tag = 'c)')
##Plot 4: smoothed incidence curves
g4 <- ggplot(data.frame(x = seq(offset + 1, n_days - 2 * tau, 1), y = epi_vals$I_true[1:(n_days - offset - 2 * tau)],
z = I_emp[1:(n_days - offset - 2 * tau)], w = epi_vals$lam_true[(2 * tau + 1):(n_days - offset)])) +
geom_point(aes(x = x, y = y, colour = 'I_t'), size = 0.2) +
geom_line(aes(x = x, y = z, colour = 'S_t')) +
geom_line(aes(x = x, y = w, colour = 'lam_{t + 2tau}')) +
scale_color_manual(values = c('I_t' = 'black', 'S_t' = 'blue', 'lam_{t + 2tau}' = 'red')) +
labs(x = 'Days', y = 'Incidence of Infection', title = 'Smoothing Incidence of Infection',
color = 'Incidence', tag = 'd)')
print(g1)
print(g2)
print(g3)
print(g4)
if(save_plot){
to_plot <- grid.arrange(g1, g2, g3, g4, ncol = 2, nrow = 2)#, labels = c("a)","b)","c)", "d)"))
ggsave(file_name, to_plot)
#pdf(file_name)
#print(to_plot)
#dev.off()
}
return(list('R_true' = epi_vals$R_true, 'I_true' = epi_vals$I_true, 'r_est' = r_emp,
'lam_true' = epi_vals$lam_true,'r_true' = r_true, 'R_est' = R_est$fit))
}
epi1 <- simulate_epidemic(n_days, dist_param, init_inc, offset, scen_num, 0, 'epi_paper.pdf')
kl(epi1$R_true, epi1$R_est, epi1$lam_true)
mse(epi1$r_true, epi1$r_est)
mse(epi1$r_true[2:280], epi1$r_est)
simulate_epidemic <- function(n_days, dist_param, init_inc, offset, scen_num, save_plot, file_name){
##Derive true values and model estimates
epi_vals <- setup(scen_num, n_days, dist_param, init_inc, offset) #get true values
r_lam <- diff(log(epi_vals$lam_true)) #r_t | lam_t as pairwise difference of log(lam_t)
tau <- round(dist_param[1] / dist_param[2] / 2)
#get the true r_t from true R_t based on same model assumptions
r_true <- get_rt(epi_vals$R_true, dist_param)
plot(seq(1, 280, 1), epi_vals$R_true)
plot(seq(1, 280, 1), epi_vals$I_true)
#esimate Rt using rtestim package
R_est <- run_rtestim(epi_vals$I_true, dist_param)
#smoothed incidence using SG filter (window 50, cubic fit)
I_emp <- pmax(sgolayfilt(epi_vals$I_true, p = 3, n = 31), rep(0.00001, n_days - offset))
r_emp <- sgolayfilt(diff(log(I_emp)), p = 3, n = 91) #r_t | S_t from smoothed incidence
r_Rt <- get_rt(R_est$fit, dist_param)
r_upperCI <- get_rt(R_est$ci$`97.5%`, dist_param)
r_lowerCI <- get_rt(R_est$ci$`2.5%`, dist_param)
##Plot 1: estimating reproduction numbers
g1 <- ggplot(data.frame(x = seq(offset + 1, n_days, 1), y = epi_vals$R_true, z = R_est$fit)) +
geom_line(aes(x = x, y = y, colour = 'R_true')) +
geom_line(aes(x = x, y = z, colour = 'R_estimate')) +
geom_line(aes(x = x, y = R_est$ci$`2.5%`, colour = 'R_estimate'), linetype = 'dotted') +
geom_line(aes(x = x, y = R_est$ci$`97.5%`, colour = 'R_estimate'), linetype = 'dotted') +
scale_color_manual(values = c('R_true' = 'black', 'R_estimate' = 'blue')) +
labs(title = 'Estimating Instantaneous Reproduction Number', x = 'Days', y = 'Reproduction Number',
color = 'Reproduction Number', tag = 'a)')
##Plot 2: estimating growth rates 3 ways
g2 <- ggplot() +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_true, colour = 'r_true')) +
geom_line(aes(x = seq(offset + tau + 1, n_days, 1), y = r_emp[1:(length(r_emp) - tau + 1)], colour = 'r_t | S_t')) +
geom_line(aes(x = seq(offset + 1, n_days - tau, 1), y = r_lam[tau:length(r_lam)], colour = 'r_t | lam_t')) +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_Rt, colour = 'r_t | R_t')) +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_upperCI, colour = 'r_t | R_t'), linetype = 'dotted') +
geom_line(aes(x = seq(offset + 1, n_days, 1), y = r_lowerCI, colour = 'r_t | R_t'), linetype = 'dotted') +
scale_color_manual(values = c('r_true' = 'black', 'r_t | S_t' = 'blue', 'r_t | lam_t' = 'red', 'r_t | R_t' = 'green')) +
labs(title = 'Estimating Instantaneous Growth Rate',x = 'Days', y = 'Growth Rate',
color = 'Growth Rate', tag = 'b)')
##Plot 3: incidence
#Here, we use I_t coming from a Poisson distribution with rate (R_t lam_t)
g3 <- ggplot(data.frame(x = seq(offset + 1, n_days, 1), y = epi_vals$I_true, z = epi_vals$lam_true * R_est$fit)) +
geom_point(aes(x = x, y = y, colour = 'I_true'), size = 0.2) +
geom_line(aes(x = x, y = z, colour = 'I_t | R_t')) +
scale_color_manual(values = c('I_true' = 'black', 'I_t | R_t' = 'blue')) +
labs(x = 'Days', y = 'Incidence of Infection', title = 'Estimating Incidence of Infection',
color = 'Incidence', tag = 'c)')
##Plot 4: smoothed incidence curves
g4 <- ggplot(data.frame(x = seq(offset + 1, n_days - 2 * tau, 1), y = epi_vals$I_true[1:(n_days - offset - 2 * tau)],
z = I_emp[1:(n_days - offset - 2 * tau)], w = epi_vals$lam_true[(2 * tau + 1):(n_days - offset)])) +
geom_point(aes(x = x, y = y, colour = 'I_t'), size = 0.2) +
geom_line(aes(x = x, y = z, colour = 'S_t')) +
geom_line(aes(x = x, y = w, colour = 'lam_{t + 2tau}')) +
scale_color_manual(values = c('I_t' = 'black', 'S_t' = 'blue', 'lam_{t + 2tau}' = 'red')) +
labs(x = 'Days', y = 'Incidence of Infection', title = 'Smoothing Incidence of Infection',
color = 'Incidence', tag = 'd)')
print(g1)
print(g2)
print(g3)
print(g4)
if(save_plot){
to_plot <- grid.arrange(g1, g2, g3, g4, ncol = 2, nrow = 2)#, labels = c("a)","b)","c)", "d)"))
ggsave(file_name, to_plot)
#pdf(file_name)
#print(to_plot)
#dev.off()
}
return(list('R_true' = epi_vals$R_true, 'I_true' = epi_vals$I_true, 'r_est' = r_Rt,
'lam_true' = epi_vals$lam_true,'r_true' = r_true, 'R_est' = R_est$fit))
}
